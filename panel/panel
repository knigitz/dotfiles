#! /bin/sh

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

. panel_config
. panel_colors

bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &

panel_battery() {
	batteryStatus=$(battery -f '%s')
	batteryLevel=$(battery -f '%d')
	if [ "$batteryLevel" -gt 60 ]
	then
		batteryLevel="%{F#ff859900}$batteryLevel%%{F-}"
	elif [ "$batteryLevel" -gt 25 ]
	then
		batteryLevel="%{F#ffb58900}$batteryLevel%%{F-}"
	elif [ "$batteryLevel" -gt 15 ]
	then
		batteryLevel="%{F#ffdc322f}$batteryLevel%%{F-}"
	else
		batteryLevel="%{F#fff3f3f3}%{B#ffdc322f}$batteryLevel%%{F-}%{B-}"
	fi
	echo "$batteryLevel"
}

panel_clock() {
	echo $(date +"%a %-I:%M %p")

}

# loop to refresh system status
while true; do
	echo "S" $(panel_battery) $(panel_clock) > "$PANEL_FIFO" &
	sleep .5s
done &

cat "$PANEL_FIFO" \
	| panel_bar \
	| lemonbar \
		-g "$PANEL_HEIGHT" \
		-u "$PANEL_UNDERLINE" \
		-f "$PANEL_FONT" \
		-F "$COLOR_FOREGROUND" \
		-B "$COLOR_BACKGROUND" &
wait
